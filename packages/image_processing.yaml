########################
### Image processing ###
########################
image_processing:
  - platform: deepstack_object
    ip_address: localhost
    port: 5000
    api_key: !secret deepstack_password
    # scan_interval: 30 # Optional, in seconds
    save_file_folder: /config/camera_1/person/
    save_timestamped_file: True
#    confidence: 90
    targets:
      - person
#      - car
    source:
      - entity_id: camera.kamera_1
        name: deepstack_camera_1

##############
### Camera ###
##############
camera:
  - platform: local_file
    name: latest person
    file_path: /config/www/latest_person/1.jpg

  - platform: local_file
    name: latest person away
    file_path: /config/www/latest_person_away/1.jpg
  - platform: local_file
    name: latest person away 2
    file_path: /config/www/latest_person_away/2.jpg
  - platform: local_file
    name: latest person away 3
    file_path: /config/www/latest_person_away/3.jpg
  - platform: local_file
    name: latest person away 4
    file_path: /config/www/latest_person_away/4.jpg
  - platform: local_file
    name: latest person away 5
    file_path: /config/www/latest_person_away/5.jpg

  - platform: local_file
    name: latest other
    file_path: /config/www/latest_other/1.jpg
  - platform: local_file
    name: latest other
    file_path: /config/www/latest_other/2.jpg
  - platform: local_file
    name: latest other
    file_path: /config/www/latest_other/3.jpg
  - platform: local_file
    name: latest other
    file_path: /config/www/latest_other/4.jpg
  - platform: local_file
    name: latest other
    file_path: /config/www/latest_other/5.jpg

##################
### Automation ###
##################
automation:
  #####################################################
  ### Processes image every 5 sec when home  at day ###
  #####################################################
  - alias: Camera 1 Image processing when home at day
    trigger:
      - platform: time_pattern
        seconds: "/5"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.track_for_home_devices
          state: 'home'
        - condition: time
          after: '05:00:00'
          before: '22:00:00'
    action:
      - service: image_processing.scan
        data:
          entity_id: image_processing.deepstack_camera_1

  ######################################################
  ### Processes image every 5 sec when home at night ###
  ######################################################
  - alias: Camera 1 Image processing when home at night
    trigger:
      - platform: time_pattern
        seconds: "/5"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.track_for_home_devices
          state: 'home'
        - condition: time
          before: '05:00:00'
          after: '22:00:00'
    action:
      - service: image_processing.scan
        data:
          entity_id: image_processing.deepstack_camera_1

  #############################################
  ### Processes image every 5 sec when away ###
  #############################################
  - alias: Camera 1 Image processing when away
    trigger:
      - platform: time_pattern
        seconds: "/5"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.track_for_home_devices
          state: 'not_home'
    action:
      - service: image_processing.scan
        data:
          entity_id: image_processing.deepstack_camera_1

  #########################
  ### Remove old images ###
  #########################
  - alias: Camera 1 Remove old images
    trigger:
      - platform: time
        at: "00:01:00" # HH:MM:SS
    action:
      - service: shell_command.camera_1_remove_old_images

  #########################################
  ### Copy latest motion detected image ###
  #########################################
  - alias: Camera 1 Copy latest motion
    trigger:
      - platform: event
        event_type: folder_watcher
        event_data:
          event_type: created
    action:
      - service: shell_command.camera_1_copy_latest_motion_1

  ##############################################
  ### Copy latest motion away detected image ###
  ##############################################
  - alias:  Camera 1 Copy latest motion away
    trigger:
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '1'
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '2'
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '3'
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '4'
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '5'
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '6'
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '7'
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '8'
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '9'
      - platform: state
        entity_id: sensor.camera_1_person
        from: ''
        to: '10'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.track_for_home_devices
          state: 'not_home'
    action:
      - delay: '00:00:02' # Add delay as the new image do not exist yet
      - service: shell_command.camera_1_copy_latest_motion_away
      - delay: '00:02:30'
      - service: script.camera_1_latest_motion_away_1

  #######################################
  ### Copy latest motion other things ###
  #######################################
  - alias:  Camera 1 Copy latest motion other
    trigger:
      - platform: state
        entity_id: sensor.camera_1_bird
        from: ''
        to: '1'
      - platform: state
        entity_id: sensor.camera_1_dog
        from: ''
        to: '1'
      - platform: state
        entity_id: sensor.camera_1_cat
        from: ''
        to: '1'
      - platform: state
        entity_id: sensor.camera_1_horse
        from: ''
        to: '1'
      - platform: state
        entity_id: sensor.camera_1_sheep
        from: ''
        to: '1'
      - platform: state
        entity_id: sensor.camera_1_cow
        from: ''
        to: '1'
    action:
      - delay: '00:00:02' # Add delay as the new image do not exist yet
      - service: shell_command.camera_1_copy_latest_motion_other_5
      - service: shell_command.camera_1_copy_latest_motion_other_4
      - service: shell_command.camera_1_copy_latest_motion_other_3
      - service: shell_command.camera_1_copy_latest_motion_other_2
      - service: shell_command.camera_1_copy_latest_motion_other_1

##############
### Script ###
##############
script:
  camera_1_latest_motion_away_1:
    sequence:
      - service: script.turn_on
        data_template:
          entity_id: >
            {% if is_state('group.track_for_home_devices', 'not_home') %}
              script.camera_1_latest_motion_away_2
            {% endif %}

  camera_1_latest_motion_away_2:
    sequence:
      - service: shell_command.camera_1_copy_latest_motion_away_5
      - service: shell_command.camera_1_copy_latest_motion_away_4
      - service: shell_command.camera_1_copy_latest_motion_away_3
      - service: shell_command.camera_1_copy_latest_motion_away_2
      - service: shell_command.camera_1_copy_latest_motion_away_1
      - service: notify.pushbullet
        data:
          title: "{{ now().strftime('%H:%M %Y-%m-%d') }}"
          message: "Person detekterad, senaste bild"
          data:
            file: /config/www/latest_person_away/1.jpg

#####################
### Shell command ###
#####################
shell_command:
  # Delete 10 days old images from folder /config/camera_1/person
  camera_1_remove_old_images: 'find /config/camera_1/person -mtime +14 -type f -delete' 

  # Copy latest motion person
  camera_1_copy_latest_motion_1: 'cp /config/camera_1/person/deepstack_camera_1_latest.jpg /config/www/latest_person/1.jpg'

  # Copy latest motion person away
  camera_1_copy_latest_motion_away: 'cp /config/camera_1/person/deepstack_camera_1_latest.jpg /config/camera_1/latest_person_away/1.jpg'
  camera_1_copy_latest_motion_away_5: 'cp /config/www/latest_person_away/4.jpg /config/www/latest_person_away/5.jpg'
  camera_1_copy_latest_motion_away_4: 'cp /config/www/latest_person_away/3.jpg /config/www/latest_person_away/4.jpg'
  camera_1_copy_latest_motion_away_3: 'cp /config/www/latest_person_away/2.jpg /config/www/latest_person_away/3.jpg'
  camera_1_copy_latest_motion_away_2: 'cp /config/www/latest_person_away/1.jpg /config/www/latest_person_away/2.jpg'
  camera_1_copy_latest_motion_away_1: 'cp /config/camera_1/latest_person_away/1.jpg /config/www/latest_person_away/1.jpg'

  # Copy latest motion other
  camera_1_copy_latest_motion_other_5: 'cp /config/www/latest_other/4.jpg /config/www/latest_other/5.jpg'
  camera_1_copy_latest_motion_other_4: 'cp /config/www/latest_other/3.jpg /config/www/latest_other/4.jpg'
  camera_1_copy_latest_motion_other_3: 'cp /config/www/latest_other/2.jpg /config/www/latest_other/3.jpg'
  camera_1_copy_latest_motion_other_2: 'cp /config/www/latest_other/1.jpg /config/www/latest_other/2.jpg'
  camera_1_copy_latest_motion_other_1: 'cp /config/camera_1/person/deepstack_camera_1_latest.jpg /config/www/latest_other/1.jpg'

##############
### Sensor ###
##############
sensor:
  - platform: template
    sensors:
      camera_1_person:
        friendly_name: Camera 1 Person
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['person'] }}"

      camera_1_bicycle:
        friendly_name: Camera 1 Cykel
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['bicycle'] }}"

      camera_1_car:
        friendly_name: Camera 1 Bil
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['car'] }}"

      camera_1_motorcycle:
        friendly_name: Camera 1 Motorcykel
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['motorcycle'] }}"

      camera_1_bus:
        friendly_name: Camera 1 Buss
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['bus'] }}"

      camera_1_truck:
        friendly_name: Camera 1 lastbil
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['truck'] }}"

      camera_1_boat:
        friendly_name: Camera 1 Båt
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['boat'] }}"

      camera_1_bird:
        friendly_name: Camera 1 Fågel
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['bird'] }}"

      camera_1_cat:
        friendly_name: Camera 1 Katt
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['cat'] }}"

      camera_1_dog:
        friendly_name: Camera 1 Hund
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['dog'] }}"

      camera_1_horse:
        friendly_name: Camera 1 Häst
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['horse'] }}"

      camera_1_sheep:
        friendly_name: Camera 1 Får
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['sheep'] }}"

      camera_1_cow:
        friendly_name: Camera 1 Ko
        value_template: "{{ states.image_processing.deepstack_camera_1.attributes.summary['cow'] }}"


# Used: 
# person, bicycle, car, motorcycle, bus, truck, boat,
# bird, cat, dog, horse, sheep, cow
# Not used: elephant, bear, zebra, giraffe,

# Unused:
# airplane, train, traffic light, fire hydrant, stop_sign,
# parking meter, bench,  backpack, umbrella, handbag, tie, suitcase,
# frisbee, skis, snowboard, sports ball, kite, baseball bat, baseball glove,
# skateboard, surfboard, tennis racket, bottle, wine glass, cup, fork,
# knife, spoon, bowl, banana, apple, sandwich, orange, broccoli, carrot,
# hot dog, pizza, donot, cake, chair, couch, potted plant, bed, dining table,
# toilet, tv, laptop, mouse, remote, keyboard, cell phone, microwave,
# oven, toaster, sink, refrigerator, book, clock, vase, scissors, teddy bear,
# hair dryer, toothbrush.